set cursorline
set number
set ruler
set hlsearch
set ic
set is
set runtimepath^=$HOME/.settings/vim
set runtimepath+=$HOME/.settings/vim/after
set viminfo+=n$HOME/.settings/vim/viminfo

runtime bundle/vim-pathogen/autoload/pathogen.vim

execute pathogen#infect()

set nocompatible
filetype off

"NeoBundles

call neobundle#begin(expand('~/.settings/vim/bundle/'))

 " Let NeoBundle manage NeoBundle
 " Required:
 NeoBundleFetch 'Shougo/neobundle.vim'

 " My Bundles here:
 " Refer to |:NeoBundle-examples|.
 " Note: You don't set neobundle setting in .gvimrc!
 NeoBundle 'git://github.com/altercation/vim-colors-solarized.git'
 NeoBundle 'alpaca-tc/alpaca_powertabline'
 NeoBundle 'https://github.com/Lokaltog/powerline.git'
 NeoBundle 'nathanaelkane/vim-indent-guides'
 NeoBundle 'apple-swift', {'type': 'nosync', 'base': '~/.settings/vim/bundle/swift-highlight'}
call neobundle#end()


"NeoBundles end

filetype plugin on
filetype indent on

syntax enable
set background=dark
colorscheme solarized

set expandtab "タブ入力を複数の空白入力に置き換える
set tabstop=4 "画面上でタブ文字が占める幅
set shiftwidth=4 "自動インデントでずれる幅
set softtabstop=4 "連続した空白に対してタブキーやバックスペースキーでカーソルが動く幅
set autoindent "改行時に前の行のインデントを継続する
set smartindent "改行時に入力された行の末尾に合わせて次の行のインデントを増減する
set showcmd "入力中のコマンドを表示
set backspace=indent,eol,start

set laststatus=2
set rtp+=~/.settings/vim/bundle/powerline/powerline/bindings/vim
let g:Powerline_symbols = 'fancy'
set noshowmode

let g:indent_guides_auto_colors = 0
hi IndentGuidesOdd  ctermbg=black
hi IndentGuidesEven ctermbg=black
set ts=4 sw=4 et
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1
let g:indent_guides_enable_on_vim_startup=1

function FigletVim()
    let string=getline('.')
    if string == ""
        return
    endif
    let tmp = @a
    let @a = system("figlet " . string . " | sed 's/^\\(.\\)/\\/\\/ \\1/'")
    execute ":normal dd"
    execute 'normal "ap'
    let @a = tmp
endfunction
nnoremap <C-_> :call FigletVim()<CR>
inoremap <C-_> <ESC>:call FigletVim()<CR>i

